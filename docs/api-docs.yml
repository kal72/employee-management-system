openapi: 3.0.0
info:
  title: Attendance Service API
  version: 2.0.0
paths:
  /employees:
    get:
      summary: Get all employees
      responses:
        '200':
          description: Successful response
    post:
      summary: Add a new employee
      responses:
        '201':
          description: Employee added successfully
  /employees/{id}:
    get:
      summary: Get employee by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
        '404':
          description: Employee not found
    put:
      summary: Update employee by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
      responses:
        '200':
          description: Employee updated successfully
        '404':
          description: Employee not found
    delete:
      summary: Delete employee by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
      responses:
        '204':
          description: Employee deleted successfully
  /employees/average-salary:
    get:
      summary: Get average salary of employees
      responses:
        '200':
          description: Successful response
  /employees/employees-by-last-name/{lastName}:
    get:
      summary: Get employees by last name
      parameters:
        - name: lastName
          in: path
          required: true
          description: Last name of employees
          schema:
            type: string
      responses:
        '200':
          description: Successful response
  /employees/employee-emails:
    get:
      summary: Get all employee emails
      responses:
        '200':
          description: Successful response
  /api/attendance/history/{employeeId}:
    get:
      summary: Get Attendance History
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - id: 1
                  employeeId: 123
                  checkIn: '2023-01-05T09:00:00'
                  checkOut: '2023-01-05T17:00:00'
                  status: CHECKED_OUT
  /api/attendance/statistics/{employeeId}:
    get:
      summary: Get Attendance Statistics
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                totalAttendance: 200
                totalLateArrivals: 10
                totalAbsences: 20
  /api/attendance/checkin/{employeeId}:
    post:
      summary: Check In
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
  /api/attendance/checkout/{employeeId}:
    post:
      summary: Check Out
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
  /api/performance-reviews/employee/{employeeId}:
    get:
      summary: Get Performance Reviews by Employee ID
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - id: 1
                  employeeId: 123
                  reviewDate: '2023-02-15'
                  rating: 4
                  feedback: 'Good performance'

  /api/performance-reviews/add:
    post:
      summary: Add Performance Review
      requestBody:
        required: true
        content:
          application/json:
            example:
              employeeId: 123
              reviewDate: '2023-02-15'
              rating: 4
              feedback: 'Good performance'
      responses:
        '201':
